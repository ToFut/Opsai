
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model User {
  id String @id @default(cuid())
  email String @unique
  name String
  role String? @default("user")
  organizationId String @map("organization_id")
  isActive Boolean? @default(true) @map("is_active")
  lastLogin DateTime? @map("last_login")
  preferences String?
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  organization Organization @relation(fields: [organizationId], references: [id])
  ownedProjects Project[]
  assignedTasks Task[] @relation("TaskAssignedTo")
  createdTasks Task[] @relation("TaskCreatedBy")

  @@map("user")
}

model Organization {
  id String @id @default(cuid())
  name String
  slug String? @unique
  domain String? @unique
  plan String? @default("starter")
  billingEmail String @map("billing_email")
  settings String?
  isActive Boolean? @default(true) @map("is_active")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  Users User[]
  Projects Project[]

  @@map("organization")
}

model Project {
  id String @id @default(cuid())
  name String
  description String?
  organizationId String @map("organization_id")
  ownerId String @map("owner_id")
  status String? @default("planning")
  priority String? @default("medium")
  budget Float?
  startDate DateTime? @map("start_date")
  endDate DateTime? @map("end_date")
  tags String?
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  organization Organization @relation(fields: [organizationId], references: [id])
  owner User @relation(fields: [ownerId], references: [id])
  Tasks Task[]

  @@map("project")
}

model Task {
  id String @id @default(cuid())
  title String
  description String?
  projectId String @map("project_id")
  assignedTo String? @map("assigned_to")
  createdBy String @map("created_by")
  status String? @default("todo")
  priority String? @default("medium")
  estimatedHours Int? @map("estimated_hours")
  actualHours Int? @map("actual_hours")
  dueDate DateTime? @map("due_date")
  completedAt DateTime? @map("completed_at")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  project Project @relation(fields: [projectId], references: [id])
  assignedToRelation User? @relation("TaskAssignedTo", fields: [assignedTo], references: [id])
  createdByRelation User @relation("TaskCreatedBy", fields: [createdBy], references: [id])

  @@map("task")
}