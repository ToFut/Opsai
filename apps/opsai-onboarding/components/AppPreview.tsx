'use client'

import { useState } from 'react'
import { ArrowLeft, ExternalLink, Code, Download, Share2, Settings, Monitor, Smartphone, Tablet } from 'lucide-react'

interface AppPreviewProps {
  appUrl: string
  appName: string
  yamlConfig: string
  onBack: () => void
  onStartNew: () => void
}

export default function AppPreview({ appUrl, appName, yamlConfig, onBack, onStartNew }: AppPreviewProps) {
  const [viewMode, setViewMode] = useState<'desktop' | 'tablet' | 'mobile'>('desktop')
  const [showCode, setShowCode] = useState(false)

  const shareApp = () => {
    if (navigator.share) {
      navigator.share({
        title: `Check out my SaaS app: ${appName}`,
        text: `I just built a SaaS application using OPSAI Core!`,
        url: appUrl,
      })
    } else {
      navigator.clipboard.writeText(appUrl)
      alert('App URL copied to clipboard!')
    }
  }

  const downloadProject = () => {
    // Create a comprehensive project download
    const projectStructure = `
# ${appName} - Generated by OPSAI Core

## 🚀 Your SaaS Application is Ready!

**Live URL:** ${appUrl}

## 📁 Project Structure
\`\`\`
${appName.toLowerCase().replace(/\s+/g, '-')}/
├── app/                    # Next.js App Router pages
├── components/             # React components
├── lib/                   # Utilities and database
├── prisma/                # Database schema and migrations
├── api/                   # API routes
├── styles/                # CSS and styling
└── package.json           # Dependencies
\`\`\`

## 🛠️ Tech Stack
- **Framework:** Next.js 14 with App Router
- **Database:** PostgreSQL with Prisma ORM
- **Authentication:** NextAuth.js
- **Styling:** Tailwind CSS
- **Deployment:** Vercel

## 🔧 Development Commands
\`\`\`bash
npm install          # Install dependencies
npm run dev          # Start development server
npm run build        # Build for production
npm run db:migrate   # Run database migrations
\`\`\`

## 📋 Original Configuration
The application was generated from this YAML configuration:

\`\`\`yaml
${yamlConfig}
\`\`\`

## 🎯 Features Included
✅ Complete CRUD operations
✅ User authentication
✅ Responsive design
✅ API integration ready
✅ Database schema with relationships
✅ Admin dashboard
✅ Production deployment

## 🚀 Next Steps
1. Customize the design and branding
2. Add your business logic
3. Configure API integrations
4. Set up payment processing
5. Launch your SaaS!

---
Built with ❤️ using OPSAI Core
    `.trim()

    const blob = new Blob([projectStructure], { type: 'text/markdown' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${appName.toLowerCase().replace(/\s+/g, '-')}-project.md`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const getViewportClasses = () => {
    switch (viewMode) {
      case 'mobile':
        return 'w-80 h-[600px]'
      case 'tablet':
        return 'w-[768px] h-[600px]'
      default:
        return 'w-full h-[600px]'
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b px-4 py-4">
        <div className="max-w-7xl mx-auto">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button
                onClick={onBack}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
              >
                <ArrowLeft className="w-5 h-5" />
              </button>
              <div>
                <h1 className="text-2xl font-bold text-gray-900">{appName}</h1>
                <p className="text-gray-600">Your generated SaaS application</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-3">
              {/* Viewport Toggle */}
              <div className="flex items-center space-x-1 bg-gray-100 rounded-lg p-1">
                <button
                  onClick={() => setViewMode('desktop')}
                  className={`p-2 rounded ${viewMode === 'desktop' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}
                  title="Desktop view"
                >
                  <Monitor className="w-4 h-4" />
                </button>
                <button
                  onClick={() => setViewMode('tablet')}
                  className={`p-2 rounded ${viewMode === 'tablet' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}
                  title="Tablet view"
                >
                  <Tablet className="w-4 h-4" />
                </button>
                <button
                  onClick={() => setViewMode('mobile')}
                  className={`p-2 rounded ${viewMode === 'mobile' ? 'bg-white shadow-sm' : 'hover:bg-gray-200'}`}
                  title="Mobile view"
                >
                  <Smartphone className="w-4 h-4" />
                </button>
              </div>

              <button
                onClick={() => setShowCode(!showCode)}
                className={`px-3 py-2 rounded-lg border transition-colors flex items-center ${
                  showCode ? 'bg-blue-50 border-blue-200 text-blue-700' : 'bg-white border-gray-300 hover:bg-gray-50'
                }`}
              >
                <Code className="w-4 h-4 mr-2" />
                {showCode ? 'Hide Code' : 'View Code'}
              </button>

              <button
                onClick={shareApp}
                className="px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center"
              >
                <Share2 className="w-4 h-4 mr-2" />
                Share
              </button>

              <button
                onClick={downloadProject}
                className="px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center"
              >
                <Download className="w-4 h-4 mr-2" />
                Download
              </button>

              <a
                href={appUrl}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center"
              >
                <ExternalLink className="w-4 h-4 mr-2" />
                Open App
              </a>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-6">
        <div className={`grid ${showCode ? 'grid-cols-2' : 'grid-cols-1'} gap-6`}>
          {/* App Preview */}
          <div className="bg-white rounded-lg border p-4">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center space-x-2">
                <div className="flex space-x-1">
                  <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                  <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                  <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                </div>
                <div className="bg-gray-100 px-3 py-1 rounded text-sm text-gray-600">
                  {appUrl}
                </div>
              </div>
              <div className="text-sm text-gray-500 capitalize">
                {viewMode} view
              </div>
            </div>
            
            <div className="flex justify-center">
              <div className={`border rounded-lg overflow-hidden shadow-lg bg-white ${getViewportClasses()}`}>
                <iframe
                  src={appUrl}
                  className="w-full h-full"
                  title={`${appName} Preview`}
                  sandbox="allow-same-origin allow-scripts allow-forms allow-popups"
                />
              </div>
            </div>
          </div>

          {/* Code View */}
          {showCode && (
            <div className="bg-white rounded-lg border p-4">
              <div className="flex items-center justify-between mb-4">
                <h3 className="font-semibold text-gray-900">Generated Configuration</h3>
                <button
                  onClick={() => navigator.clipboard.writeText(yamlConfig)}
                  className="text-sm text-blue-600 hover:text-blue-800"
                >
                  Copy YAML
                </button>
              </div>
              <div className="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-auto h-[550px]">
                <pre className="text-sm whitespace-pre-wrap font-mono">
                  {yamlConfig}
                </pre>
              </div>
            </div>
          )}
        </div>

        {/* Success Message & Next Steps */}
        <div className="mt-8 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg border border-green-200 p-6">
          <div className="text-center">
            <div className="text-4xl mb-4">🎉</div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">Congratulations!</h2>
            <p className="text-gray-600 mb-6 max-w-2xl mx-auto">
              Your SaaS application "{appName}" has been successfully generated and deployed. 
              It includes a complete database schema, API endpoints, user interface, and is ready for production use.
            </p>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-600">~2 min</div>
                <div className="text-sm text-gray-600">Generation Time</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-green-600">100%</div>
                <div className="text-sm text-gray-600">Production Ready</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-600">∞</div>
                <div className="text-sm text-gray-600">Customizable</div>
              </div>
            </div>

            <div className="flex justify-center space-x-4">
              <button
                onClick={onStartNew}
                className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 font-medium"
              >
                Build Another App
              </button>
              <a
                href={appUrl + '/admin'}
                target="_blank"
                rel="noopener noreferrer"
                className="bg-white border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 font-medium flex items-center"
              >
                <Settings className="w-4 h-4 mr-2" />
                Admin Panel
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}