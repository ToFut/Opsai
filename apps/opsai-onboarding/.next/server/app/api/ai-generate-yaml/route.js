"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ai-generate-yaml/route";
exports.ids = ["app/api/ai-generate-yaml/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai-generate-yaml%2Froute&page=%2Fapi%2Fai-generate-yaml%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai-generate-yaml%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai-generate-yaml%2Froute&page=%2Fapi%2Fai-generate-yaml%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai-generate-yaml%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_segevbin_Desktop_Opsai_apps_opsai_onboarding_app_api_ai_generate_yaml_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/ai-generate-yaml/route.ts */ \"(rsc)/./app/api/ai-generate-yaml/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ai-generate-yaml/route\",\n        pathname: \"/api/ai-generate-yaml\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai-generate-yaml/route\"\n    },\n    resolvedPagePath: \"/Users/segevbin/Desktop/Opsai/apps/opsai-onboarding/app/api/ai-generate-yaml/route.ts\",\n    nextConfigOutput,\n    userland: _Users_segevbin_Desktop_Opsai_apps_opsai_onboarding_app_api_ai_generate_yaml_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/ai-generate-yaml/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4zMF9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhaS1nZW5lcmF0ZS15YW1sJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhaS1nZW5lcmF0ZS15YW1sJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYWktZ2VuZXJhdGUteWFtbCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNlZ2V2YmluJTJGRGVza3RvcCUyRk9wc2FpJTJGYXBwcyUyRm9wc2FpLW9uYm9hcmRpbmclMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGc2VnZXZiaW4lMkZEZXNrdG9wJTJGT3BzYWklMkZhcHBzJTJGb3BzYWktb25ib2FyZGluZyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUM7QUFDbEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcHNhaS1vbmJvYXJkaW5nLz9mMzRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zZWdldmJpbi9EZXNrdG9wL09wc2FpL2FwcHMvb3BzYWktb25ib2FyZGluZy9hcHAvYXBpL2FpLWdlbmVyYXRlLXlhbWwvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FpLWdlbmVyYXRlLXlhbWwvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9haS1nZW5lcmF0ZS15YW1sXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9haS1nZW5lcmF0ZS15YW1sL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3NlZ2V2YmluL0Rlc2t0b3AvT3BzYWkvYXBwcy9vcHNhaS1vbmJvYXJkaW5nL2FwcC9hcGkvYWktZ2VuZXJhdGUteWFtbC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYWktZ2VuZXJhdGUteWFtbC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai-generate-yaml%2Froute&page=%2Fapi%2Fai-generate-yaml%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai-generate-yaml%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/ai-generate-yaml/route.ts":
/*!*******************************************!*\
  !*** ./app/api/ai-generate-yaml/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openai */ \"(rsc)/../../node_modules/.pnpm/openai@4.104.0/node_modules/openai/index.mjs\");\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function POST(request) {\n    try {\n        const { businessAnalysis, confirmedInsights, businessProfile, customizations } = await request.json();\n        if (!businessAnalysis || !confirmedInsights) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Business analysis and confirmed insights are required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`🤖 Starting AI YAML generation for: ${businessProfile.businessName}`);\n        // Stage 2: Generate Custom YAML Configuration\n        const yamlConfig = await generateYAMLWithAI(businessAnalysis, confirmedInsights, businessProfile, customizations);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            yaml: yamlConfig.yaml,\n            config: yamlConfig.structured,\n            metadata: {\n                generatedAt: new Date().toISOString(),\n                model: \"gpt-4o\",\n                stage: \"yaml_generation\"\n            }\n        });\n    } catch (error) {\n        console.error(\"AI YAML Generation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate YAML configuration\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper function to try parsing JSON with various cleanup strategies\nasync function tryParseJson(jsonString) {\n    const strategies = [\n        // Strategy 1: Parse as-is\n        (str)=>JSON.parse(str),\n        // Strategy 2: Remove trailing commas\n        (str)=>JSON.parse(str.replace(/,(\\s*[}\\]])/g, \"$1\")),\n        // Strategy 3: Quote unquoted keys and remove trailing commas\n        (str)=>JSON.parse(str.replace(/,(\\s*[}\\]])/g, \"$1\").replace(/([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*:/g, '\"$1\":')),\n        // Strategy 4: Fix common formatting issues\n        (str)=>{\n            let cleaned = str.replace(/,(\\s*[}\\]])/g, \"$1\") // Remove trailing commas\n            .replace(/([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*:/g, '\"$1\":') // Quote keys\n            .replace(/'/g, '\"') // Replace single quotes\n            .replace(/:\\s*([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*([,}\\]])/g, ': \"$1\"$2') // Quote unquoted string values\n            ;\n            return JSON.parse(cleaned);\n        },\n        // Strategy 5: Try to fix truncated JSON by adding missing closing braces\n        (str)=>{\n            let braceCount = 0;\n            let cleanStr = str.replace(/,(\\s*[}\\]])/g, \"$1\");\n            for (const char of cleanStr){\n                if (char === \"{\") braceCount++;\n                else if (char === \"}\") braceCount--;\n            }\n            // Add missing closing braces\n            while(braceCount > 0){\n                cleanStr += \"}\";\n                braceCount--;\n            }\n            return JSON.parse(cleanStr);\n        }\n    ];\n    for (const strategy of strategies){\n        try {\n            const result = strategy(jsonString.trim());\n            console.log(\"✅ JSON parsing strategy succeeded\");\n            return result;\n        } catch (e) {\n            continue;\n        }\n    }\n    console.log(\"❌ All JSON parsing strategies failed\");\n    return null;\n}\nasync function generateYAMLWithAI(businessAnalysis, confirmedInsights, businessProfile, customizations = {}) {\n    const yamlPrompt = `\nYou are an expert software architect. Generate a HIGHLY CUSTOMIZED YAML configuration for this specific business.\n\nBUSINESS INTELLIGENCE:\n- Name: ${businessProfile.businessName}\n- Industry: ${confirmedInsights.businessIntelligence?.industryCategory || businessProfile.businessType}\n- Business Model: ${confirmedInsights.businessIntelligence?.businessModel || \"General Business\"}\n- Revenue Streams: ${JSON.stringify(confirmedInsights.businessIntelligence?.revenueStreams || [])}\n- Target Audience: ${confirmedInsights.businessIntelligence?.targetAudience || \"General customers\"}\n- Competitive Advantages: ${JSON.stringify(confirmedInsights.businessIntelligence?.competitiveAdvantages || [])}\n- Operational Complexity: ${confirmedInsights.businessIntelligence?.operationalComplexity || \"medium\"}\n- Scale Requirements: ${confirmedInsights.businessIntelligence?.scalabilityRequirements || \"regional\"}\n\nDETAILED DATA MODELS (use these EXACTLY):\n${JSON.stringify(confirmedInsights.technicalRequirements?.dataModels || [], null, 2)}\n\nSPECIFIC INTEGRATIONS NEEDED:\n${JSON.stringify(confirmedInsights.technicalRequirements?.integrationOpportunities || [], null, 2)}\n\nUSER ROLES & PERMISSIONS:\n${JSON.stringify(confirmedInsights.userManagement?.userTypes || [], null, 2)}\n\nWORKFLOW REQUIREMENTS:\n${JSON.stringify(confirmedInsights.technicalRequirements?.workflowRequirements || [], null, 2)}\n\nCRITICAL UI/UX FEATURES:\n${JSON.stringify(confirmedInsights.uiuxRecommendations?.criticalFeatures || [], null, 2)}\n\nCOMPLIANCE & SECURITY NEEDS:\n${JSON.stringify(confirmedInsights.userManagement?.securityRequirements || {}, null, 2)}\n\nGenerate a complete YAML configuration that includes:\n\n1. **Vertical Definition** - Business-specific application metadata\n2. **Database Schema** - Complete data models with relationships, validation, and indexes\n3. **API Integrations** - Real third-party services with authentication and endpoints\n4. **Workflows** - Automated business processes with triggers and steps\n5. **User Management** - Role-based access control and authentication\n6. **UI Configuration** - Pages, components, and user experiences\n7. **Alerts & Notifications** - Business-critical alerts and communication\n8. **Deployment Settings** - Production-ready deployment configuration\n9. **Security Configuration** - Data protection and compliance settings\n10. **Performance Optimization** - Caching, scaling, and monitoring\n\nYAML STRUCTURE REQUIREMENTS:\n\n\\`\\`\\`yaml\n# Business Application Configuration\nvertical:\n  name: [kebab-case-name]\n  description: [specific business description]\n  version: \"1.0.0\"\n  industry: [specific industry]\n  businessModel: [confirmed business model]\n\nbusiness:\n  name: [business name]\n  type: [business type]\n  website: [website URL]\n  contact:\n    email: [contact email]\n    phone: [phone if available]\n  settings:\n    timezone: [appropriate timezone]\n    currency: [business currency]\n    language: \"en\"\n\ndatabase:\n  provider: \"postgresql\"\n  models: [generate specific models based on analysis]\n    - name: [ModelName]\n      displayName: [Human readable name]\n      description: [business purpose]\n      fields:\n        - name: [field_name]\n          type: [appropriate type]\n          required: [boolean]\n          unique: [boolean if needed]\n          validation: [specific validation rules]\n          ui:\n            label: [user-friendly label]\n            widget: [appropriate UI widget]\n            [additional UI config]\n      relationships: [define foreign keys and relations]\n      indexes: [performance indexes]\n      permissions: [role-based field access]\n\napis:\n  integrations: [specific to business needs]\n    - name: [integration_name]\n      type: \"rest\" | \"soap\" | \"webhook\"\n      provider: [actual service provider]\n      baseUrl: [real API URL]\n      authentication:\n        type: [oauth2|api_key|basic]\n        [auth configuration]\n      endpoints: [actual API endpoints]\n      rateLimits: [real rate limits]\n      errorHandling: [retry policies]\n\nworkflows: [business-specific automation]\n  - name: [workflow_name]\n    description: [business purpose]\n    trigger:\n      type: [api_call|schedule|event]\n      [trigger configuration]\n    steps: [detailed workflow steps]\n    errorHandling: [failure scenarios]\n    monitoring: [success metrics]\n\nauthentication:\n  providers: [appropriate auth methods]\n  roles: [specific user roles]\n  permissions: [granular permissions]\n  security:\n    passwordPolicy: [strong policies]\n    sessionManagement: [secure sessions]\n    auditLogging: [compliance logging]\n\nui:\n  theme:\n    primaryColor: [brand appropriate]\n    secondaryColor: [complementary]\n    layout: [appropriate layout style]\n  pages: [business-specific pages]\n    - name: [page_name]\n      path: [URL path]\n      layout: [page layout]\n      components: [specific components]\n      permissions: [access control]\n\nalerts:\n  channels: [appropriate channels]\n  rules: [business-critical alerts]\n    - name: [alert_name]\n      description: [business context]\n      conditions: [specific conditions]\n      actions: [notification actions]\n      severity: [appropriate level]\n\ndeployment:\n  platform: [recommended platform]\n  environment: \"production\"\n  resources:\n    api: [appropriate sizing]\n    database: [appropriate sizing]\n    storage: [if needed]\n  domains: [custom domain]\n  ssl: true\n  monitoring: [comprehensive monitoring]\n  backup:\n    frequency: [appropriate frequency]\n    retention: [appropriate retention]\n\nfeatures: [enable relevant features]\n  authentication: true\n  workflows: true\n  integrations: true\n  fileUpload: [if needed]\n  notifications: true\n  analytics: true\n  multiTenancy: [if needed]\n  audit: [if compliance needed]\n\nsecurity:\n  encryption:\n    atRest: true\n    inTransit: true\n  compliance: [relevant standards]\n  dataRetention: [appropriate policies]\n  accessLogging: true\n\nperformance:\n  caching:\n    strategy: [appropriate strategy]\n    ttl: [appropriate TTL]\n  scaling:\n    type: [horizontal|vertical]\n    triggers: [scaling metrics]\n  monitoring:\n    metrics: [key performance indicators]\n    alerting: [performance alerts]\n\\`\\`\\`\n\nCRITICAL GENERATION GUIDELINES:\n1. **USE THE EXACT DATA PROVIDED**: Transform the specific data models, integrations, workflows, and user roles provided above into the YAML - do not create generic examples\n2. **INDUSTRY-SPECIFIC CUSTOMIZATION**: Generate configurations that are uniquely suited to this industry and business model\n3. **BUSINESS-SPECIFIC FEATURES**: Include features and workflows that directly address this business's revenue streams and operational needs\n4. **EXACT DATA MODEL IMPLEMENTATION**: Use the provided data models with their exact field definitions, relationships, and business purposes\n5. **REAL INTEGRATION MAPPING**: Configure the specific third-party services identified for this business with appropriate endpoints and authentication\n6. **ROLE-BASED CUSTOMIZATION**: Implement the exact user roles and permissions structure identified for this business\n7. **WORKFLOW AUTOMATION**: Create workflows that automate the specific business processes identified in the analysis\n8. **COMPLIANCE ALIGNMENT**: Address the specific regulatory and compliance requirements for this industry\n9. **SCALABILITY MATCHING**: Design for the specific scale requirements (local/regional/national/global) identified\n10. **COMPETITIVE ADVANTAGE SUPPORT**: Include features that support the business's identified competitive advantages\n\nCRITICAL OUTPUT REQUIREMENTS:\n- Return ONLY a valid JSON object\n- NO markdown code blocks (no backticks)\n- NO explanations or comments\n- NO additional text before or after the JSON\n\nReturn a JSON object with this exact structure:\n{\n  \"yaml\": \"# The complete YAML configuration as a string here\\nvertical:\\n  name: example\\n  ...\",\n  \"structured\": {\n    \"vertical\": { \"name\": \"example\", ... },\n    \"database\": { ... },\n    \"apis\": { ... }\n  }\n}\n\nIMPORTANT: This YAML must be UNIQUELY CUSTOMIZED for ${businessProfile.businessName} in the ${confirmedInsights.businessIntelligence?.industryCategory || businessProfile.businessType} industry. \nDo NOT generate generic templates - use the specific business intelligence, data models, integrations, and workflows provided above.\n\nStart your response with { and end with } - nothing else.\n`;\n    try {\n        console.log(\"\\uD83E\\uDD16 Sending YAML generation request to OpenAI...\");\n        const response = await openai.chat.completions.create({\n            model: \"gpt-4o\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are an expert software architect specializing in business application configuration. You have deep expertise in YAML, database design, API integrations, workflow automation, and modern web application architecture. You generate production-ready configurations that solve real business problems. CRITICAL: Return ONLY valid JSON with no markdown formatting, no code blocks, no explanations - just the raw JSON object exactly as specified in the prompt.\"\n                },\n                {\n                    role: \"user\",\n                    content: yamlPrompt\n                }\n            ],\n            temperature: 0.2,\n            max_tokens: 4000\n        });\n        const responseContent = response.choices[0].message.content || \"{}\";\n        let yamlResult;\n        console.log(\"Raw OpenAI response length:\", responseContent.length);\n        console.log(\"First 500 chars of response:\", responseContent.substring(0, 500));\n        // Strategy 1: Check for markdown code blocks FIRST (most common from OpenAI)\n        console.log(\"\\uD83D\\uDD0D Checking for markdown code blocks first...\");\n        // Check for markdown code blocks\n        const codeBlockMatches = [\n            responseContent.match(/```json\\s*\\n?([\\s\\S]*?)\\n?```/),\n            responseContent.match(/```\\s*\\n?([\\s\\S]*?)\\n?```/)\n        ];\n        for (const codeBlockMatch of codeBlockMatches){\n            if (codeBlockMatch) {\n                console.log(\"\\uD83D\\uDCDD Found markdown code block, extracting content...\");\n                let extractedContent = codeBlockMatch[1].trim();\n                console.log(\"Extracted content length:\", extractedContent.length);\n                if (await tryParseJson(extractedContent)) {\n                    yamlResult = await tryParseJson(extractedContent);\n                    console.log(\"✅ Successfully parsed JSON from code block\");\n                    break;\n                }\n            }\n        }\n        // Strategy 2: Try raw JSON parsing (in case OpenAI returns pure JSON)\n        if (!yamlResult) {\n            console.log(\"\\uD83D\\uDD04 Code blocks failed, trying raw JSON parsing...\");\n            try {\n                yamlResult = JSON.parse(responseContent);\n                console.log(\"✅ Successfully parsed raw JSON response\");\n            } catch (rawParseError) {\n                console.log(\"❌ Raw JSON parsing failed, trying JSON object extraction...\");\n            }\n        }\n        // Strategy 3: If no code block or raw JSON worked, try to find JSON objects\n        if (!yamlResult) {\n            console.log(\"\\uD83D\\uDCC4 Raw JSON failed, trying JSON object extraction...\");\n            // Find the most complete JSON object by looking for balanced braces\n            const jsonCandidates = [];\n            let braceCount = 0;\n            let startIndex = -1;\n            for(let i = 0; i < responseContent.length; i++){\n                const char = responseContent[i];\n                if (char === \"{\") {\n                    if (braceCount === 0) startIndex = i;\n                    braceCount++;\n                } else if (char === \"}\") {\n                    braceCount--;\n                    if (braceCount === 0 && startIndex !== -1) {\n                        jsonCandidates.push(responseContent.substring(startIndex, i + 1));\n                    }\n                }\n            }\n            // Try parsing each candidate, starting with the longest\n            jsonCandidates.sort((a, b)=>b.length - a.length);\n            console.log(`Found ${jsonCandidates.length} JSON candidates`);\n            for (const candidate of jsonCandidates){\n                const parsed = await tryParseJson(candidate);\n                if (parsed) {\n                    yamlResult = parsed;\n                    console.log(\"✅ Successfully parsed JSON candidate\");\n                    break;\n                }\n            }\n        }\n        // Strategy 4: Last resort - use fallback generation\n        if (!yamlResult) {\n            console.log(\"\\uD83D\\uDD27 All parsing strategies failed, using fallback generation...\");\n            console.log(\"Full response for debugging:\", responseContent.substring(0, 2000));\n            throw new Error(\"Could not extract valid JSON from OpenAI response. Will use fallback generation.\");\n        }\n        console.log(\"✅ AI YAML Generation completed\");\n        return yamlResult;\n    } catch (error) {\n        console.error(\"OpenAI YAML Generation error:\", error);\n        throw new Error(\"Failed to generate YAML with AI\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ai-generate-yaml/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.2.30_react-dom@18.3.1_react@18.3.1","vendor-chunks/formdata-node@4.4.1","vendor-chunks/openai@4.104.0","vendor-chunks/form-data-encoder@1.7.2","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/agentkeepalive@4.6.0","vendor-chunks/tr46@0.0.3","vendor-chunks/web-streams-polyfill@4.0.0-beta.3","vendor-chunks/node-fetch@2.7.0","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/ms@2.1.3","vendor-chunks/humanize-ms@1.2.1","vendor-chunks/event-target-shim@5.0.1","vendor-chunks/abort-controller@3.0.0"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai-generate-yaml%2Froute&page=%2Fapi%2Fai-generate-yaml%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai-generate-yaml%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();