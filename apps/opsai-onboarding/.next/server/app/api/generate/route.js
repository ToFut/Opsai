"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate/route";
exports.ids = ["app/api/generate/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate%2Froute&page=%2Fapi%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate%2Froute&page=%2Fapi%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_segevbin_Desktop_Opsai_apps_opsai_onboarding_app_api_generate_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/generate/route.ts */ \"(rsc)/./app/api/generate/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate/route\",\n        pathname: \"/api/generate\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate/route\"\n    },\n    resolvedPagePath: \"/Users/segevbin/Desktop/Opsai/apps/opsai-onboarding/app/api/generate/route.ts\",\n    nextConfigOutput,\n    userland: _Users_segevbin_Desktop_Opsai_apps_opsai_onboarding_app_api_generate_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/generate/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4zMF9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2VuZXJhdGUlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnZW5lcmF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNlZ2V2YmluJTJGRGVza3RvcCUyRk9wc2FpJTJGYXBwcyUyRm9wc2FpLW9uYm9hcmRpbmclMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGc2VnZXZiaW4lMkZEZXNrdG9wJTJGT3BzYWklMkZhcHBzJTJGb3BzYWktb25ib2FyZGluZyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNkI7QUFDMUc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcHNhaS1vbmJvYXJkaW5nLz9iZGY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zZWdldmJpbi9EZXNrdG9wL09wc2FpL2FwcHMvb3BzYWktb25ib2FyZGluZy9hcHAvYXBpL2dlbmVyYXRlL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9nZW5lcmF0ZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zZWdldmJpbi9EZXNrdG9wL09wc2FpL2FwcHMvb3BzYWktb25ib2FyZGluZy9hcHAvYXBpL2dlbmVyYXRlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9nZW5lcmF0ZS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate%2Froute&page=%2Fapi%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/generate/route.ts":
/*!***********************************!*\
  !*** ./app/api/generate/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst execAsync = (0,util__WEBPACK_IMPORTED_MODULE_2__.promisify)(child_process__WEBPACK_IMPORTED_MODULE_1__.exec);\n// Local implementations to replace broken imports\nclass LocalYamlProcessor {\n    static parse(yamlString) {\n        try {\n            // Simple YAML parsing - in production, use js-yaml\n            if (yamlString.trim().startsWith(\"{\")) {\n                return JSON.parse(yamlString);\n            }\n            // Basic YAML-like parsing for demo\n            return this.parseBasicYaml(yamlString);\n        } catch (error) {\n            throw new Error(`YAML parsing failed: ${error}`);\n        }\n    }\n    static parseBasicYaml(yamlString) {\n        const lines = yamlString.split(\"\\n\");\n        const result = {};\n        let currentSection = null;\n        let currentKey = \"\";\n        for (const line of lines){\n            const trimmed = line.trim();\n            if (!trimmed || trimmed.startsWith(\"#\")) continue;\n            if (trimmed.endsWith(\":\")) {\n                const sectionName = trimmed.slice(0, -1).trim();\n                if (!result[sectionName]) {\n                    result[sectionName] = {};\n                }\n                currentSection = result[sectionName];\n            } else if (trimmed.includes(\":\") && currentSection) {\n                const [key, value] = trimmed.split(\":\", 2);\n                currentSection[key.trim()] = value.trim();\n            }\n        }\n        return result;\n    }\n}\nclass LocalCacheService {\n    async get(key) {\n        return this.cache.get(key);\n    }\n    async set(key, value, ttl) {\n        this.cache.set(key, value);\n    }\n    constructor(){\n        this.cache = new Map();\n    }\n}\nclass LocalSecurityService {\n    async hashPassword(password) {\n        // Simple hash for demo - in production, use bcrypt\n        return Buffer.from(password).toString(\"base64\");\n    }\n    generateToken(payload) {\n        // Simple token generation for demo - in production, use JWT\n        return Buffer.from(JSON.stringify(payload)).toString(\"base64\");\n    }\n}\nclass LocalAppGenerator {\n    static async generate(config, appName, outputDir) {\n        console.log(`Generating app: ${appName} in ${outputDir}`);\n    // Implementation will be added below\n    }\n}\nclass LocalAuthService {\n    constructor(config){\n    // Auth service configuration\n    }\n    async login(credentials) {\n        // Simple login for demo\n        return {\n            token: \"demo-token\",\n            user: {\n                id: \"1\",\n                email: credentials.email\n            }\n        };\n    }\n    async register(userData) {\n        // Simple registration for demo\n        return {\n            token: \"demo-token\",\n            user: {\n                id: \"1\",\n                email: userData.email\n            }\n        };\n    }\n}\nclass LocalAirbyteConnector {\n    constructor(config){\n    // Airbyte configuration\n    }\n    async execute(action, params) {\n        // Simple Airbyte simulation\n        return {\n            success: true,\n            data: {\n                id: \"demo-connection\"\n            }\n        };\n    }\n}\nclass LocalTenantManager {\n    static getInstance() {\n        return new LocalTenantManager();\n    }\n    async createTenant(data) {\n        return {\n            id: \"demo-tenant\",\n            name: data.name,\n            slug: data.slug\n        };\n    }\n    async getTenant(id) {\n        return {\n            id,\n            name: \"Demo Tenant\",\n            slug: \"demo-tenant\"\n        };\n    }\n}\nclass LocalDeploymentManager {\n    async deploy(config) {\n        return {\n            id: \"demo-deployment\",\n            status: \"deployed\",\n            url: \"https://demo-app.vercel.app\"\n        };\n    }\n}\n// Temporary validation function until @opsai/shared is built\nfunction validateYamlConfigSafe(config) {\n    try {\n        if (!config.vertical || !config.business || !config.database) {\n            return {\n                success: false,\n                errors: [\n                    \"Missing required sections: vertical, business, database\"\n                ]\n            };\n        }\n        return {\n            success: true,\n            data: config\n        };\n    } catch (error) {\n        return {\n            success: false,\n            errors: [\n                \"Invalid configuration format\"\n            ]\n        };\n    }\n}\n// Enhanced field type conversion with business-specific types\nfunction convertFieldType(yamlType, businessType) {\n    const baseTypeMap = {\n        \"string\": \"String\",\n        \"number\": \"Float\",\n        \"integer\": \"Int\",\n        \"boolean\": \"Boolean\",\n        \"date\": \"DateTime\",\n        \"datetime\": \"DateTime\",\n        \"json\": \"String\",\n        \"enum\": \"String\"\n    };\n    // Business-specific type mappings\n    const businessTypeMap = {\n        \"healthcare\": {\n            \"medical_device_id\": \"String\",\n            \"compliance_status\": \"String\",\n            \"certification_date\": \"DateTime\",\n            \"regulatory_approval\": \"String\",\n            \"patient_data\": \"String\",\n            \"medical_license\": \"String\"\n        },\n        \"ecommerce\": {\n            \"product_sku\": \"String\",\n            \"inventory_count\": \"Int\",\n            \"price\": \"Float\",\n            \"category\": \"String\",\n            \"shipping_weight\": \"Float\",\n            \"order_status\": \"String\"\n        },\n        \"real_estate\": {\n            \"property_id\": \"String\",\n            \"square_feet\": \"Int\",\n            \"bedrooms\": \"Int\",\n            \"bathrooms\": \"Int\",\n            \"price\": \"Float\",\n            \"property_type\": \"String\",\n            \"listing_status\": \"String\"\n        }\n    };\n    const businessTypes = businessTypeMap[businessType.toLowerCase()] || {};\n    return businessTypes[yamlType.toLowerCase()] || baseTypeMap[yamlType.toLowerCase()] || \"String\";\n}\n// Generate business-specific UI pages based on YAML configuration\nfunction generateCustomUIPages(config, businessType) {\n    const basePages = [\n        {\n            name: \"dashboard\",\n            path: \"/\",\n            components: [\n                {\n                    type: \"business_overview\",\n                    dataSource: \"analytics\"\n                },\n                {\n                    type: \"recent_activity\",\n                    dataSource: \"activity_log\"\n                }\n            ]\n        }\n    ];\n    // Business-specific page generation\n    const businessPages = {\n        \"healthcare\": [\n            {\n                name: \"compliance\",\n                path: \"/compliance\",\n                components: [\n                    {\n                        type: \"compliance_dashboard\",\n                        dataSource: \"compliance_records\"\n                    },\n                    {\n                        type: \"certification_tracker\",\n                        dataSource: \"certifications\"\n                    }\n                ]\n            },\n            {\n                name: \"medical_devices\",\n                path: \"/medical-devices\",\n                components: [\n                    {\n                        type: \"device_inventory\",\n                        dataSource: \"medical_devices\"\n                    },\n                    {\n                        type: \"regulatory_status\",\n                        dataSource: \"regulatory_records\"\n                    }\n                ]\n            },\n            {\n                name: \"training\",\n                path: \"/training\",\n                components: [\n                    {\n                        type: \"training_sessions\",\n                        dataSource: \"training_records\"\n                    },\n                    {\n                        type: \"certification_progress\",\n                        dataSource: \"certifications\"\n                    }\n                ]\n            }\n        ],\n        \"ecommerce\": [\n            {\n                name: \"products\",\n                path: \"/products\",\n                components: [\n                    {\n                        type: \"product_catalog\",\n                        dataSource: \"products\"\n                    },\n                    {\n                        type: \"inventory_management\",\n                        dataSource: \"inventory\"\n                    }\n                ]\n            },\n            {\n                name: \"orders\",\n                path: \"/orders\",\n                components: [\n                    {\n                        type: \"order_management\",\n                        dataSource: \"orders\"\n                    },\n                    {\n                        type: \"fulfillment_tracker\",\n                        dataSource: \"fulfillment\"\n                    }\n                ]\n            },\n            {\n                name: \"customers\",\n                path: \"/customers\",\n                components: [\n                    {\n                        type: \"customer_management\",\n                        dataSource: \"customers\"\n                    },\n                    {\n                        type: \"loyalty_program\",\n                        dataSource: \"loyalty\"\n                    }\n                ]\n            }\n        ],\n        \"real_estate\": [\n            {\n                name: \"properties\",\n                path: \"/properties\",\n                components: [\n                    {\n                        type: \"property_listings\",\n                        dataSource: \"properties\"\n                    },\n                    {\n                        type: \"market_analysis\",\n                        dataSource: \"market_data\"\n                    }\n                ]\n            },\n            {\n                name: \"clients\",\n                path: \"/clients\",\n                components: [\n                    {\n                        type: \"client_management\",\n                        dataSource: \"clients\"\n                    },\n                    {\n                        type: \"lead_tracker\",\n                        dataSource: \"leads\"\n                    }\n                ]\n            },\n            {\n                name: \"transactions\",\n                path: \"/transactions\",\n                components: [\n                    {\n                        type: \"transaction_history\",\n                        dataSource: \"transactions\"\n                    },\n                    {\n                        type: \"commission_tracker\",\n                        dataSource: \"commissions\"\n                    }\n                ]\n            }\n        ]\n    };\n    // Add custom pages based on YAML models\n    const customPages = (config.database?.models || []).map((model)=>({\n            name: model.name.toLowerCase(),\n            path: `/${model.name.toLowerCase()}s`,\n            components: [\n                {\n                    type: \"data_management\",\n                    dataSource: model.name.toLowerCase(),\n                    actions: [\n                        \"create\",\n                        \"edit\",\n                        \"delete\",\n                        \"view\"\n                    ]\n                }\n            ]\n        }));\n    return [\n        ...basePages,\n        ...businessPages[businessType.toLowerCase()] || [],\n        ...customPages\n    ];\n}\n// Generate business-specific navigation\nfunction generateCustomNavigation(config, businessType) {\n    const baseNav = [\n        {\n            name: \"Dashboard\",\n            href: \"/\",\n            icon: \"Home\"\n        }\n    ];\n    const businessNav = {\n        \"healthcare\": [\n            {\n                name: \"Medical Devices\",\n                href: \"/medical-devices\",\n                icon: \"Activity\"\n            },\n            {\n                name: \"Compliance\",\n                href: \"/compliance\",\n                icon: \"Shield\"\n            },\n            {\n                name: \"Training\",\n                href: \"/training\",\n                icon: \"GraduationCap\"\n            },\n            {\n                name: \"Certifications\",\n                href: \"/certifications\",\n                icon: \"Award\"\n            }\n        ],\n        \"ecommerce\": [\n            {\n                name: \"Products\",\n                href: \"/products\",\n                icon: \"Package\"\n            },\n            {\n                name: \"Orders\",\n                href: \"/orders\",\n                icon: \"ShoppingCart\"\n            },\n            {\n                name: \"Customers\",\n                href: \"/customers\",\n                icon: \"Users\"\n            },\n            {\n                name: \"Inventory\",\n                href: \"/inventory\",\n                icon: \"Box\"\n            }\n        ],\n        \"real_estate\": [\n            {\n                name: \"Properties\",\n                href: \"/properties\",\n                icon: \"Home\"\n            },\n            {\n                name: \"Clients\",\n                href: \"/clients\",\n                icon: \"Users\"\n            },\n            {\n                name: \"Transactions\",\n                href: \"/transactions\",\n                icon: \"DollarSign\"\n            },\n            {\n                name: \"Leads\",\n                href: \"/leads\",\n                icon: \"Target\"\n            }\n        ]\n    };\n    // Add custom navigation based on YAML models\n    const customNav = (config.database?.models || []).map((model)=>({\n            name: model.name.charAt(0).toUpperCase() + model.name.slice(1) + \"s\",\n            href: `/${model.name.toLowerCase()}s`,\n            icon: \"Database\"\n        }));\n    return [\n        ...baseNav,\n        ...businessNav[businessType.toLowerCase()] || [],\n        ...customNav\n    ];\n}\n// Generate a truly custom Next.js application based on YAML\nasync function generateCustomNextJSApp(config, appName, outputDir) {\n    console.log(\"\\uD83D\\uDE80 Generating custom application based on YAML configuration...\");\n    // Create app structure\n    const appDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"app\");\n    const componentsDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"components\");\n    const libDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"lib\");\n    const prismaDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"prisma\");\n    const apiDir = path__WEBPACK_IMPORTED_MODULE_4__.join(appDir, \"api\");\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(appDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(componentsDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(libDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(prismaDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(apiDir, {\n        recursive: true\n    });\n    // Generate custom Prisma schema based on YAML models\n    await generateCustomPrismaSchema(config, prismaDir);\n    // Generate custom app layout\n    await generateCustomAppLayout(config, appDir);\n    // Generate custom main page\n    await generateCustomMainPage(config, appDir);\n    // Generate custom dashboard components\n    await generateCustomDashboardComponents(config, componentsDir);\n    // Generate custom API routes\n    await generateCustomAPIRoutes(config, apiDir);\n    // Generate custom data pages\n    await generateCustomDataPages(config, appDir);\n    // Generate custom utility files\n    await generateCustomUtilityFiles(config, libDir);\n    // Generate authentication system\n    await generateAuthenticationSystem(config, outputDir);\n    // Generate integration configurations\n    await generateIntegrationConfig(config, outputDir);\n    // Generate package.json with business-specific dependencies\n    await generateCustomPackageJson(config, outputDir);\n    // Generate environment configuration\n    await generateEnvironmentConfig(config, outputDir);\n    // Generate deployment configuration\n    await generateDeploymentConfig(config, outputDir);\n    // Generate custom README\n    await generateCustomREADME(config, outputDir);\n    console.log(\"✅ Custom application generation completed!\");\n}\n// Generate custom Prisma schema based on YAML models\nasync function generateCustomPrismaSchema(config, prismaDir) {\n    const businessType = config.vertical.industry.toLowerCase();\n    let schemaContent = `// This is your Prisma schema file\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\n`;\n    // Add tenant and user models first\n    schemaContent += `model Tenant {\n  id String @id @default(cuid())\n  name String\n  slug String @unique\n  status String @default(\"active\")\n  settings Json?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  \n  // Relations\n  users User[]\n  ${config.database.models.map((model)=>`${model.name.toLowerCase()}s ${model.name}[]`).join(\"\\n  \")}\n}\n\nmodel User {\n  id String @id @default(cuid()) \n  email String @unique\n  firstName String\n  lastName String\n  role String @default(\"user\")\n  status String @default(\"active\")\n  tenantId String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  lastLoginAt DateTime?\n  \n  // Relations\n  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  \n  @@index([tenantId])\n}\n\n// Generate models based on YAML configuration with tenant isolation\n`;\n    config.database.models.forEach((model)=>{\n        schemaContent += `model ${model.name} {\n  id String @unique @id @default(cuid())\n  tenantId String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n`;\n        // Add custom fields from YAML\n        model.fields.forEach((field)=>{\n            if (field.name !== \"id\" && field.name !== \"createdAt\" && field.name !== \"updatedAt\" && field.name !== \"tenantId\") {\n                const fieldType = convertFieldType(field.type, businessType);\n                const uniqueConstraint = field.unique ? \" @unique\" : \"\";\n                schemaContent += `  ${field.name} ${fieldType}${uniqueConstraint}\\n`;\n            }\n        });\n        // Add tenant relation\n        schemaContent += `  \n  // Relations\n  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  \n  @@index([tenantId])\n}\\n\\n`;\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(prismaDir, \"schema.prisma\"), schemaContent);\n    console.log(\"\\uD83D\\uDCCA Custom Prisma schema generated\");\n}\n// Generate custom app layout\nasync function generateCustomAppLayout(config, appDir) {\n    const navigation = generateCustomNavigation(config, config.vertical.industry);\n    const layoutContent = `import './globals.css'\nimport { Inter } from 'next/font/google'\nimport Sidebar from '@/components/Sidebar'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata = {\n  title: '${config.business.name} - Management Dashboard',\n  description: '${config.vertical.description}',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        <div className=\"flex h-screen bg-gray-100\">\n          <Sidebar />\n          <main className=\"flex-1 overflow-auto\">\n            {children}\n          </main>\n        </div>\n      </body>\n    </html>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(appDir, \"layout.tsx\"), layoutContent);\n    console.log(\"\\uD83C\\uDFA8 Custom app layout generated\");\n}\n// Generate custom main page\nasync function generateCustomMainPage(config, appDir) {\n    const businessType = config.vertical.industry.toLowerCase();\n    let dashboardContent = `import { Suspense } from 'react'\nimport StatsOverview from '@/components/StatsOverview'\nimport RecentActivity from '@/components/RecentActivity'\nimport ChartWidget from '@/components/ChartWidget'\n`;\n    // Add business-specific imports\n    if (businessType === \"healthcare\") {\n        dashboardContent += `import ComplianceOverview from '@/components/ComplianceOverview'\nimport MedicalDeviceStatus from '@/components/MedicalDeviceStatus'\n`;\n    } else if (businessType === \"ecommerce\") {\n        dashboardContent += `import SalesOverview from '@/components/SalesOverview'\nimport InventoryStatus from '@/components/InventoryStatus'\n`;\n    } else if (businessType === \"real_estate\") {\n        dashboardContent += `import PropertyOverview from '@/components/PropertyOverview'\nimport TransactionStatus from '@/components/TransactionStatus'\n`;\n    }\n    dashboardContent += `\nexport default function Dashboard() {\n  return (\n    <div className=\"p-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">${config.business.name} Dashboard</h1>\n        <p className=\"text-gray-600 mt-2\">${config.vertical.description}</p>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n          <StatsOverview />\n`;\n    // Add business-specific components\n    if (businessType === \"healthcare\") {\n        dashboardContent += `          <ComplianceOverview />\n          <MedicalDeviceStatus />\n`;\n    } else if (businessType === \"ecommerce\") {\n        dashboardContent += `          <SalesOverview />\n          <InventoryStatus />\n`;\n    } else if (businessType === \"real_estate\") {\n        dashboardContent += `          <PropertyOverview />\n          <TransactionStatus />\n`;\n    }\n    dashboardContent += `        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <ChartWidget />\n          <RecentActivity />\n        </div>\n      </Suspense>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(appDir, \"page.tsx\"), dashboardContent);\n    console.log(\"\\uD83D\\uDCC4 Custom main page generated\");\n}\n// Generate custom dashboard components\nasync function generateCustomDashboardComponents(config, componentsDir) {\n    const businessType = config.vertical.industry.toLowerCase();\n    const navigation = generateCustomNavigation(config, businessType);\n    // Generate custom sidebar\n    const sidebarContent = `'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { ${navigation.map((nav)=>nav.icon).join(\", \")} } from 'lucide-react'\n\nconst navigation = [\n${navigation.map((nav)=>`  { name: '${nav.name}', href: '${nav.href}', icon: ${nav.icon} }`).join(\",\\n\")}\n]\n\nexport default function Sidebar() {\n  const pathname = usePathname()\n\n  return (\n    <div className=\"flex h-full w-64 flex-col bg-gray-900\">\n      <div className=\"flex h-16 shrink-0 items-center px-6\">\n        <h1 className=\"text-xl font-bold text-white\">${config.business.name}</h1>\n      </div>\n      <nav className=\"flex flex-1 flex-col px-6 pb-4\">\n        <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n          <li>\n            <ul role=\"list\" className=\"-mx-2 space-y-1\">\n              {navigation.map((item) => {\n                const isActive = pathname === item.href\n                return (\n                  <li key={item.name}>\n                    <Link\n                      href={item.href}\n                      className={\\`group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold \\${\n                        isActive\n                          ? 'bg-gray-800 text-white'\n                          : 'text-gray-400 hover:text-white hover:bg-gray-800'\n                      }\\`}\n                    >\n                      <item.icon className=\"h-6 w-6 shrink-0\" aria-hidden=\"true\" />\n                      {item.name}\n                    </Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"Sidebar.tsx\"), sidebarContent);\n    // Generate business-specific components\n    if (businessType === \"healthcare\") {\n        await generateHealthcareComponents(componentsDir);\n    } else if (businessType === \"ecommerce\") {\n        await generateEcommerceComponents(componentsDir);\n    } else if (businessType === \"real_estate\") {\n        await generateRealEstateComponents(componentsDir);\n    }\n    // Generate generic components\n    await generateGenericComponents(componentsDir);\n    console.log(\"\\uD83E\\uDDE9 Custom dashboard components generated\");\n}\n// Generate healthcare-specific components\nasync function generateHealthcareComponents(componentsDir) {\n    const complianceOverview = `'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Shield, AlertTriangle, CheckCircle } from 'lucide-react'\n\nexport default function ComplianceOverview() {\n  const [complianceData, setComplianceData] = useState({\n    totalDevices: 0,\n    compliantDevices: 0,\n    pendingCertifications: 0,\n    expiredCertifications: 0\n  })\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n      <div className=\"p-5\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <Shield className=\"h-6 w-6 text-gray-400\" />\n          </div>\n          <div className=\"ml-5 w-0 flex-1\">\n            <dl>\n              <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                Compliance Status\n              </dt>\n              <dd className=\"text-lg font-medium text-gray-900\">\n                {complianceData.compliantDevices}/{complianceData.totalDevices} Devices\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-gray-50 px-5 py-3\">\n        <div className=\"text-sm\">\n          <span className=\"text-red-600 font-medium\">{complianceData.expiredCertifications} Expired</span>\n          <span className=\"mx-2\">•</span>\n          <span className=\"text-yellow-600 font-medium\">{complianceData.pendingCertifications} Pending</span>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"ComplianceOverview.tsx\"), complianceOverview);\n}\n// Generate ecommerce-specific components\nasync function generateEcommerceComponents(componentsDir) {\n    const salesOverview = `'use client'\n\nimport { useEffect, useState } from 'react'\nimport { DollarSign, TrendingUp, ShoppingCart } from 'lucide-react'\n\nexport default function SalesOverview() {\n  const [salesData, setSalesData] = useState({\n    totalRevenue: 0,\n    totalOrders: 0,\n    averageOrderValue: 0,\n    conversionRate: 0\n  })\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n      <div className=\"p-5\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <DollarSign className=\"h-6 w-6 text-gray-400\" />\n          </div>\n          <div className=\"ml-5 w-0 flex-1\">\n            <dl>\n              <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                Total Revenue\n              </dt>\n              <dd className=\"text-lg font-medium text-gray-900\">\n                $0\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-gray-50 px-5 py-3\">\n        <div className=\"text-sm\">\n          <span className=\"text-green-600 font-medium\">0 Orders</span>\n          <span className=\"mx-2\">•</span>\n          <span className=\"text-blue-600 font-medium\">$0 Avg Order</span>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"SalesOverview.tsx\"), salesOverview);\n}\n// Generate real estate-specific components\nasync function generateRealEstateComponents(componentsDir) {\n    const propertyOverview = `'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Home, MapPin, DollarSign } from 'lucide-react'\n\nexport default function PropertyOverview() {\n  const [propertyData, setPropertyData] = useState({\n    totalProperties: 0,\n    activeListings: 0,\n    totalValue: 0,\n    averagePrice: 0\n  })\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n      <div className=\"p-5\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <Home className=\"h-6 w-6 text-gray-400\" />\n          </div>\n          <div className=\"ml-5 w-0 flex-1\">\n            <dl>\n              <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                Active Listings\n              </dt>\n              <dd className=\"text-lg font-medium text-gray-900\">\n                {propertyData.activeListings} Properties\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-gray-50 px-5 py-3\">\n        <div className=\"text-sm\">\n          <span className=\"text-green-600 font-medium\">$0 Total Value</span>\n          <span className=\"mx-2\">•</span>\n          <span className=\"text-blue-600 font-medium\">$0 Avg Price</span>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"PropertyOverview.tsx\"), propertyOverview);\n}\n// Generate generic components\nasync function generateGenericComponents(componentsDir) {\n    const statsOverview = `'use client'\n\nimport { useEffect, useState } from 'react'\nimport { TrendingUp, Users, Activity, DollarSign } from 'lucide-react'\n\nexport default function StatsOverview() {\n  const [stats, setStats] = useState({\n    totalRevenue: 0,\n    totalUsers: 0,\n    totalOrders: 0,\n    growthRate: 0\n  })\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n      <div className=\"p-5\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <TrendingUp className=\"h-6 w-6 text-gray-400\" />\n          </div>\n          <div className=\"ml-5 w-0 flex-1\">\n            <dl>\n              <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                Growth Rate\n              </dt>\n              <dd className=\"text-lg font-medium text-gray-900\">\n                {stats.growthRate}%\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    const recentActivity = `'use client'\n\nimport { useEffect, useState } from 'react'\n\nexport default function RecentActivity() {\n  const [activities, setActivities] = useState([])\n\n  return (\n    <div className=\"bg-white shadow rounded-lg\">\n      <div className=\"px-4 py-5 sm:p-6\">\n        <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n          Recent Activity\n        </h3>\n        <div className=\"mt-5\">\n          <div className=\"flow-root\">\n            <ul role=\"list\" className=\"-mb-8\">\n              {activities.length === 0 ? (\n                <li className=\"text-gray-500 text-sm\">No recent activity</li>\n              ) : (\n                activities.map((activity, index) => (\n                  <li key={index} className=\"relative pb-8\">\n                    <div className=\"relative flex space-x-3\">\n                      <div>\n                        <span className=\"h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white\">\n                          <span className=\"text-white text-sm\">•</span>\n                        </span>\n                      </div>\n                      <div className=\"min-w-0 flex-1 pt-1.5 flex justify-between space-x-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-500\">\n                            {activity.description}\n                          </p>\n                        </div>\n                        <div className=\"text-right text-sm whitespace-nowrap text-gray-500\">\n                          {activity.time}\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                ))\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    const chartWidget = `'use client'\n\nimport { useEffect, useState } from 'react'\n\nexport default function ChartWidget() {\n  const [chartData, setChartData] = useState([])\n\n  return (\n    <div className=\"bg-white shadow rounded-lg\">\n      <div className=\"px-4 py-5 sm:p-6\">\n        <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n          Analytics Overview\n        </h3>\n        <div className=\"mt-5\">\n          <div className=\"h-64 flex items-center justify-center bg-gray-50 rounded\">\n            <p className=\"text-gray-500\">Chart visualization will be implemented here</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"StatsOverview.tsx\"), statsOverview);\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"RecentActivity.tsx\"), recentActivity);\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(componentsDir, \"ChartWidget.tsx\"), chartWidget);\n}\n// Generate custom API routes\nasync function generateCustomAPIRoutes(config, apiDir) {\n    // Generate API routes for each model with tenant isolation\n    for (const model of config.database.models){\n        const apiRoute = `import { NextRequest, NextResponse } from 'next/server'\nimport { PrismaClient } from '@prisma/client'\n\nconst prisma = new PrismaClient()\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Get tenant ID from headers (set by middleware)\n    const tenantId = request.headers.get('x-tenant-id')\n    \n    if (!tenantId) {\n      return NextResponse.json({ error: 'Tenant not found' }, { status: 403 })\n    }\n    \n    const ${model.name.toLowerCase()}s = await prisma.${model.name.toLowerCase()}.findMany({\n      where: { tenantId },\n      include: {\n        tenant: {\n          select: { name: true, slug: true }\n        }\n      }\n    })\n    return NextResponse.json(${model.name.toLowerCase()}s)\n  } catch (error) {\n    console.error('Error fetching ${model.name}s:', error)\n    return NextResponse.json({ error: 'Failed to fetch ${model.name}s' }, { status: 500 })\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    // Get tenant ID from headers (set by middleware)\n    const tenantId = request.headers.get('x-tenant-id')\n    const userId = request.headers.get('x-user-id')\n    \n    if (!tenantId) {\n      return NextResponse.json({ error: 'Tenant not found' }, { status: 403 })\n    }\n    \n    const data = await request.json()\n    \n    // Ensure tenant isolation\n    const ${model.name.toLowerCase()} = await prisma.${model.name.toLowerCase()}.create({\n      data: {\n        ...data,\n        tenantId // Always set tenant ID\n      },\n      include: {\n        tenant: {\n          select: { name: true, slug: true }\n        }\n      }\n    })\n    return NextResponse.json(${model.name.toLowerCase()})\n  } catch (error) {\n    console.error('Error creating ${model.name}:', error)\n    return NextResponse.json({ error: 'Failed to create ${model.name}' }, { status: 500 })\n  }\n}`;\n        const modelApiDir = path__WEBPACK_IMPORTED_MODULE_4__.join(apiDir, model.name.toLowerCase() + \"s\");\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(modelApiDir, {\n            recursive: true\n        });\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(modelApiDir, \"route.ts\"), apiRoute);\n    }\n    // Generate tenant management API\n    const tenantApiRoute = `import { NextRequest, NextResponse } from 'next/server'\nimport { TenantManager } from '@opsai/multi-tenant'\nimport { AuthService } from '@opsai/auth'\n\nconst tenantManager = TenantManager.getInstance(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n)\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { name, slug } = await request.json()\n    \n    const tenant = await tenantManager.createTenant({\n      name,\n      slug,\n      status: 'active',\n      settings: {\n        timezone: 'UTC',\n        currency: 'USD',\n        language: 'en'\n      },\n      config: {} // Will be set later\n    })\n    \n    // Setup tenant database schema\n    await tenantManager.setupTenantDatabase(tenant.id, {} as any)\n    \n    // Enable row-level security\n    await tenantManager.enableRLS(tenant.id)\n    \n    return NextResponse.json(tenant)\n  } catch (error) {\n    console.error('Error creating tenant:', error)\n    return NextResponse.json({ error: 'Failed to create tenant' }, { status: 500 })\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const tenantId = request.headers.get('x-tenant-id')\n    \n    if (!tenantId) {\n      return NextResponse.json({ error: 'Tenant not found' }, { status: 403 })\n    }\n    \n    const tenant = await tenantManager.getTenant(tenantId)\n    return NextResponse.json(tenant)\n  } catch (error) {\n    console.error('Error fetching tenant:', error)\n    return NextResponse.json({ error: 'Failed to fetch tenant' }, { status: 500 })\n  }\n}`;\n    const tenantApiDir = path__WEBPACK_IMPORTED_MODULE_4__.join(apiDir, \"tenants\");\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(tenantApiDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(tenantApiDir, \"route.ts\"), tenantApiRoute);\n    // Generate auth API routes\n    const authApiRoute = `import { NextRequest, NextResponse } from 'next/server'\nimport { AuthService } from '@opsai/auth'\nimport { TenantManager } from '@opsai/multi-tenant'\n\nconst authService = new AuthService({\n  supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  supabaseAnonKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n  jwtSecret: process.env.JWT_SECRET!\n})\n\nconst tenantManager = TenantManager.getInstance(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n)\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { action, ...data } = await request.json()\n    \n    switch (action) {\n      case 'login':\n        const loginResult = await authService.login(data)\n        return NextResponse.json(loginResult)\n        \n      case 'register':\n        const registerResult = await authService.register(data)\n        return NextResponse.json(registerResult)\n        \n      case 'logout':\n        await authService.logout(data.token)\n        return NextResponse.json({ success: true })\n        \n      default:\n        return NextResponse.json({ error: 'Invalid action' }, { status: 400 })\n    }\n  } catch (error) {\n    console.error('Auth error:', error)\n    return NextResponse.json({ error: 'Authentication failed' }, { status: 401 })\n  }\n}`;\n    const authApiDir = path__WEBPACK_IMPORTED_MODULE_4__.join(apiDir, \"auth\");\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(authApiDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(authApiDir, \"route.ts\"), authApiRoute);\n    console.log(\"\\uD83D\\uDD0C Custom API routes generated\");\n}\n// Generate custom data pages\nasync function generateCustomDataPages(config, appDir) {\n    for (const model of config.database.models){\n        const modelPage = `'use client'\n\nimport { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport { Plus, Edit, Trash2 } from 'lucide-react'\n\ninterface ${model.name} {\n  id: string\n  ${model.fields.map((field)=>`${field.name}: ${field.type === \"DateTime\" ? \"string\" : \"string\"}`).join(\"\\n  \")}\n}\n\nexport default function ${model.name}List() {\n  const [${model.name.toLowerCase()}s, set${model.name}s] = useState<${model.name}[]>([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetch('/api/${model.name.toLowerCase()}s')\n      .then(res => res.json())\n      .then(data => {\n        set${model.name}s(data)\n        setLoading(false)\n      })\n      .catch(error => {\n        console.error('Error fetching ${model.name}s:', error)\n        setLoading(false)\n      })\n  }, [])\n\n  const handleDelete = async (id: string) => {\n    if (confirm('Are you sure you want to delete this ${model.name}?')) {\n      try {\n        await fetch(\\`/api/${model.name.toLowerCase()}s/\\${id}\\`, { method: 'DELETE' })\n        set${model.name}s(${model.name.toLowerCase()}s.filter(item => item.id !== id))\n      } catch (error) {\n        console.error('Error deleting ${model.name}:', error)\n      }\n    }\n  }\n\n  if (loading) {\n    return <div className=\"p-8\">Loading...</div>\n  }\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"sm:flex sm:items-center mb-8\">\n        <div className=\"sm:flex-auto\">\n          <h1 className=\"text-2xl font-semibold text-gray-900\">${model.name}s</h1>\n          <p className=\"mt-2 text-sm text-gray-700\">\n            Manage your ${model.name}s\n          </p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n          <Link\n            href=\"/${model.name.toLowerCase()}s/new\"\n            className=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add ${model.name}\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"mt-8 flow-root\">\n        <div className=\"-my-2 -mx-6 overflow-x-auto lg:-mx-8\">\n          <div className=\"inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8\">\n            <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-300\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    ${model.fields.map((field)=>`<th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wide\">\n                        ${field.name}\n                      </th>`).join(\"\\n                    \")}\n                    <th className=\"relative px-6 py-3\">\n                      <span className=\"sr-only\">Actions</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200 bg-white\">\n                  {${model.name.toLowerCase()}s.map((${model.name.toLowerCase()}) => (\n                    <tr key={${model.name.toLowerCase()}.id}>\n                      ${model.fields.map((field)=>`<td className=\"whitespace-nowrap px-6 py-4 text-sm text-gray-900\">\n                          {${model.name.toLowerCase()}.${field.name}}\n                        </td>`).join(\"\\n                      \")}\n                      <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                        <button\n                          onClick={() => handleDelete(${model.name.toLowerCase()}.id)}\n                          className=\"text-red-600 hover:text-red-900\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}`;\n        const modelPageDir = path__WEBPACK_IMPORTED_MODULE_4__.join(appDir, model.name.toLowerCase() + \"s\");\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(modelPageDir, {\n            recursive: true\n        });\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(modelPageDir, \"page.tsx\"), modelPage);\n    }\n    console.log(\"\\uD83D\\uDCC4 Custom data pages generated\");\n}\n// Generate custom utility files\nasync function generateCustomUtilityFiles(config, libDir) {\n    const globalsCss = `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --foreground-rgb: 0, 0, 0;\n  --background-start-rgb: 214, 219, 220;\n  --background-end-rgb: 255, 255, 255;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground-rgb: 255, 255, 255;\n    --background-start-rgb: 0, 0, 0;\n    --background-end-rgb: 0, 0, 0;\n  }\n}\n\nbody {\n  color: rgb(var(--foreground-rgb));\n  background: linear-gradient(\n      to bottom,\n      transparent,\n      rgb(var(--background-end-rgb))\n    )\n    rgb(var(--background-start-rgb));\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(libDir, \"globals.css\"), globalsCss);\n    console.log(\"\\uD83C\\uDFA8 Custom utility files generated\");\n}\n// Generate custom package.json\nasync function generateCustomPackageJson(config, outputDir) {\n    const businessType = config.vertical.industry.toLowerCase();\n    let dependencies = {\n        \"next\": \"^14.0.0\",\n        \"react\": \"^18.0.0\",\n        \"react-dom\": \"^18.0.0\",\n        \"@prisma/client\": \"^5.0.0\",\n        \"lucide-react\": \"^0.263.0\",\n        \"tailwindcss\": \"^3.3.0\",\n        \"autoprefixer\": \"^10.4.14\",\n        \"postcss\": \"^8.4.24\",\n        // OpsAI Core packages\n        \"@opsai/auth\": \"workspace:*\",\n        \"@opsai/integration\": \"workspace:*\",\n        \"@opsai/database\": \"workspace:*\",\n        \"@opsai/ui\": \"workspace:*\",\n        \"@opsai/shared\": \"workspace:*\",\n        \"@supabase/supabase-js\": \"^2.39.0\",\n        \"jsonwebtoken\": \"^9.0.0\",\n        \"bcryptjs\": \"^2.4.3\"\n    };\n    // Add business-specific dependencies\n    if (businessType === \"healthcare\") {\n        dependencies = {\n            ...dependencies,\n            \"chart.js\": \"^4.0.0\",\n            \"react-chartjs-2\": \"^5.0.0\",\n            \"date-fns\": \"^2.30.0\"\n        };\n    } else if (businessType === \"ecommerce\") {\n        dependencies = {\n            ...dependencies,\n            \"stripe\": \"^12.0.0\",\n            \"react-hook-form\": \"^7.45.0\",\n            \"zod\": \"^3.22.0\"\n        };\n    } else if (businessType === \"real_estate\") {\n        dependencies = {\n            ...dependencies,\n            \"leaflet\": \"^1.9.0\",\n            \"react-leaflet\": \"^4.2.0\",\n            \"react-datepicker\": \"^4.16.0\"\n        };\n    }\n    const packageJson = {\n        name: config.vertical.name.toLowerCase().replace(/\\s+/g, \"-\"),\n        version: \"1.0.0\",\n        private: true,\n        scripts: {\n            \"dev\": \"next dev\",\n            \"build\": \"next build\",\n            \"start\": \"next start\",\n            \"lint\": \"next lint\",\n            \"db:generate\": \"prisma generate\",\n            \"db:push\": \"prisma db push\"\n        },\n        dependencies,\n        devDependencies: {\n            \"typescript\": \"^5.0.0\",\n            \"@types/node\": \"^20.0.0\",\n            \"@types/react\": \"^18.0.0\",\n            \"@types/react-dom\": \"^18.0.0\",\n            \"prisma\": \"^5.0.0\",\n            \"eslint\": \"^8.0.0\",\n            \"eslint-config-next\": \"^14.0.0\"\n        }\n    };\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"package.json\"), JSON.stringify(packageJson, null, 2));\n    console.log(\"\\uD83D\\uDCE6 Custom package.json generated\");\n}\n// Generate custom README\nasync function generateCustomREADME(config, outputDir) {\n    const readmeContent = `# ${config.business.name}\n\nThis is a generated Next.js application powered by OPSAI.\n\n## Getting Started\n\n1. Install dependencies:\n\\`\\`\\`bash\nnpm install\n\\`\\`\\`\n\n2. Set up the database:\n\\`\\`\\`bash\nnpm run db:generate\nnpm run db:push\n\\`\\`\\`\n\n3. Run the development server:\n\\`\\`\\`bash\nnpm run dev\n\\`\\`\\`\n\n4. Open [http://localhost:3000](http://localhost:3000) with your browser.\n\n## Features\n\n- Complete dashboard with analytics\n- CRUD operations for all data models\n- API endpoints for integrations\n- Responsive design with Tailwind CSS\n- Database integration with Prisma\n\n## Generated Models\n\n${config.database.models.map((model)=>`- ${model.name}`).join(\"\\n\")}\n\n## API Endpoints\n\n${config.database.models.map((model)=>`- \\`/api/${model.name.toLowerCase()}s\\` - CRUD operations for ${model.name}`).join(\"\\n\")}\n\nGenerated by OPSAI on ${new Date().toISOString()}\n`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"README.md\"), readmeContent);\n    console.log(\"\\uD83D\\uDCD6 Custom README generated\");\n}\n// Generate authentication system\nasync function generateAuthenticationSystem(config, outputDir) {\n    const authDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"app\", \"auth\");\n    const middlewareDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"middleware\");\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(authDir, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(middlewareDir, {\n        recursive: true\n    });\n    // Generate login page\n    const loginPage = `'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { AuthService } from '@opsai/auth'\nimport { Card } from '@opsai/ui'\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const router = useRouter()\n  \n  const authService = new AuthService({\n    supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    supabaseAnonKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    jwtSecret: process.env.JWT_SECRET!\n  })\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n\n    try {\n      const response = await authService.login({ email, password })\n      if (response.token) {\n        localStorage.setItem('auth_token', response.token)\n        router.push('/')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md p-8\">\n        <h1 className=\"text-2xl font-bold text-center mb-6\">Login to ${config.business.name}</h1>\n        \n        <form onSubmit={handleLogin} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n              required\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n              required\n            />\n          </div>\n          \n          {error && (\n            <div className=\"text-red-600 text-sm\">{error}</div>\n          )}\n          \n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          >\n            {loading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n        \n        <p className=\"text-center mt-4 text-sm text-gray-600\">\n          Don't have an account? <a href=\"/auth/register\" className=\"text-blue-600 hover:underline\">Register</a>\n        </p>\n      </Card>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(authDir, \"login\", \"page.tsx\"), loginPage);\n    // Generate register page\n    const registerPage = `'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { AuthService } from '@opsai/auth'\nimport { Card } from '@opsai/ui'\n\nexport default function RegisterPage() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    tenantName: ''\n  })\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const router = useRouter()\n  \n  const authService = new AuthService({\n    supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    supabaseAnonKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    jwtSecret: process.env.JWT_SECRET!\n  })\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError('')\n\n    try {\n      // Create tenant first\n      const tenantId = await createTenant(formData.tenantName)\n      \n      // Register user with tenant\n      const response = await authService.register({\n        ...formData,\n        tenantId,\n        role: 'admin'\n      })\n      \n      if (response.token) {\n        localStorage.setItem('auth_token', response.token)\n        router.push('/')\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Registration failed')\n    } finally {\n      setLoading(false)\n    }\n  }\n  \n  const createTenant = async (name: string): Promise<string> => {\n    // This would call the tenant creation API\n    const response = await fetch('/api/tenants', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name, slug: name.toLowerCase().replace(/\\s+/g, '-') })\n    })\n    const data = await response.json()\n    return data.id\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md p-8\">\n        <h1 className=\"text-2xl font-bold text-center mb-6\">Create Your Account</h1>\n        \n        <form onSubmit={handleRegister} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">First Name</label>\n              <input\n                type=\"text\"\n                value={formData.firstName}\n                onChange={(e) => setFormData({...formData, firstName: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Last Name</label>\n              <input\n                type=\"text\"\n                value={formData.lastName}\n                onChange={(e) => setFormData({...formData, lastName: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n                required\n              />\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Organization Name</label>\n            <input\n              type=\"text\"\n              value={formData.tenantName}\n              onChange={(e) => setFormData({...formData, tenantName: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n              required\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n            <input\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) => setFormData({...formData, email: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n              required\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n            <input\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => setFormData({...formData, password: e.target.value})}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\n              required\n            />\n          </div>\n          \n          {error && (\n            <div className=\"text-red-600 text-sm\">{error}</div>\n          )}\n          \n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n          >\n            {loading ? 'Creating account...' : 'Create Account'}\n          </button>\n        </form>\n        \n        <p className=\"text-center mt-4 text-sm text-gray-600\">\n          Already have an account? <a href=\"/auth/login\" className=\"text-blue-600 hover:underline\">Login</a>\n        </p>\n      </Card>\n    </div>\n  )\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(path__WEBPACK_IMPORTED_MODULE_4__.join(authDir, \"register\"), {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(authDir, \"register\", \"page.tsx\"), registerPage);\n    // Generate middleware for auth protection\n    const middleware = `import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { verifyToken } from '@opsai/auth/utils/jwt-utils'\n\nexport function middleware(request: NextRequest) {\n  // Public routes that don't require authentication\n  const publicRoutes = ['/auth/login', '/auth/register', '/api/auth']\n  \n  if (publicRoutes.some(route => request.nextUrl.pathname.startsWith(route))) {\n    return NextResponse.next()\n  }\n  \n  // Check for auth token\n  const token = request.cookies.get('auth_token')?.value || \n                request.headers.get('authorization')?.replace('Bearer ', '')\n  \n  if (!token) {\n    return NextResponse.redirect(new URL('/auth/login', request.url))\n  }\n  \n  try {\n    // Verify token\n    const decoded = verifyToken(token, process.env.JWT_SECRET!)\n    \n    // Add user info to headers for API routes\n    const response = NextResponse.next()\n    response.headers.set('x-user-id', decoded.userId)\n    response.headers.set('x-tenant-id', decoded.tenantId)\n    \n    return response\n  } catch (error) {\n    return NextResponse.redirect(new URL('/auth/login', request.url))\n  }\n}\n\nexport const config = {\n  matcher: ['/((?!_next/static|_next/image|favicon.ico).*)']\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"middleware.ts\"), middleware);\n    console.log(\"\\uD83D\\uDD10 Authentication system generated\");\n}\n// Generate integration configuration\nasync function generateIntegrationConfig(config, outputDir) {\n    const integrationsDir = path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"lib\", \"integrations\");\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(integrationsDir, {\n        recursive: true\n    });\n    // Generate Airbyte integration\n    const airbyteIntegration = `import { createAirbyteConnector } from '@opsai/integration'\nimport { prisma } from '@opsai/database'\n\nexport class DataSyncService {\n  private airbyte = createAirbyteConnector({\n    apiKey: process.env.AIRBYTE_API_KEY,\n    baseUrl: process.env.AIRBYTE_BASE_URL || 'http://localhost:8000',\n    workspaceId: process.env.AIRBYTE_WORKSPACE_ID\n  })\n  \n  async syncDataSource(sourceConfig: any, tenantId: string) {\n    try {\n      // Create Airbyte source\n      const source = await this.airbyte.execute('create_source', {\n        name: \\`\\${tenantId}-\\${sourceConfig.name}\\`,\n        sourceType: sourceConfig.type,\n        configuration: sourceConfig.config\n      })\n      \n      // Create destination (our database)\n      const destination = await this.airbyte.execute('create_destination', {\n        name: \\`\\${tenantId}-database\\`,\n        destinationType: 'postgres',\n        configuration: {\n          host: process.env.DATABASE_URL,\n          database: \\`tenant_\\${tenantId}\\`,\n          schema: 'synced_data'\n        }\n      })\n      \n      // Create connection\n      const connection = await this.airbyte.execute('create_connection', {\n        sourceId: source.sourceId,\n        destinationId: destination.destinationId,\n        schedule: { timeUnit: 'hours', units: 1 }\n      })\n      \n      // Trigger initial sync\n      const syncJob = await this.airbyte.execute('trigger_sync', {\n        connectionId: connection.connectionId\n      })\n      \n      // Save sync configuration\n      await prisma.integration.create({\n        data: {\n          tenantId,\n          provider: sourceConfig.type,\n          connectionId: connection.connectionId,\n          status: 'active',\n          config: sourceConfig\n        }\n      })\n      \n      return { success: true, syncJobId: syncJob.jobId }\n    } catch (error) {\n      console.error('Sync failed:', error)\n      return { success: false, error: error.message }\n    }\n  }\n  \n  async getSyncStatus(jobId: string) {\n    return this.airbyte.execute('get_sync_status', { jobId })\n  }\n}`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(integrationsDir, \"data-sync.ts\"), airbyteIntegration);\n    // Generate API integrations based on business type\n    const integrations = config.apis?.integrations || [];\n    for (const integration of integrations){\n        if (integration.enabled) {\n            const integrationCode = generateIntegrationCode(integration.name, config.vertical.industry);\n            await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(integrationsDir, integration.name + \"-integration.ts\"), integrationCode);\n        }\n    }\n    console.log(\"\\uD83D\\uDD0C Integration configurations generated\");\n}\n// Helper function to generate integration code\nfunction generateIntegrationCode(integrationName, businessType) {\n    const integrationMap = {\n        \"stripe\": `import Stripe from 'stripe'\n\nexport class StripeIntegration {\n  private stripe: Stripe\n  \n  constructor(apiKey: string) {\n    this.stripe = new Stripe(apiKey, { apiVersion: '2023-10-16' })\n  }\n  \n  async createCustomer(email: string, name: string) {\n    return this.stripe.customers.create({ email, name })\n  }\n  \n  async createPaymentIntent(amount: number, currency: string = 'usd') {\n    return this.stripe.paymentIntents.create({ amount, currency })\n  }\n  \n  async createSubscription(customerId: string, priceId: string) {\n    return this.stripe.subscriptions.create({\n      customer: customerId,\n      items: [{ price: priceId }]\n    })\n  }\n}`,\n        \"quickbooks\": `import { OAuthManager } from '@opsai/integration/auth'\n\nexport class QuickBooksIntegration {\n  private oauth: OAuthManager\n  \n  constructor() {\n    this.oauth = new OAuthManager('quickbooks')\n  }\n  \n  async connect(tenantId: string) {\n    return this.oauth.getAuthorizationUrl(tenantId)\n  }\n  \n  async syncInvoices(accessToken: string) {\n    // QuickBooks invoice sync logic\n  }\n}`,\n        \"shopify\": `import { RestConnector } from '@opsai/integration'\n\nexport class ShopifyIntegration {\n  private connector: RestConnector\n  \n  constructor(shop: string, accessToken: string) {\n    this.connector = new RestConnector({\n      baseURL: \\`https://\\${shop}.myshopify.com/admin/api/2024-01\\`,\n      headers: { 'X-Shopify-Access-Token': accessToken }\n    })\n  }\n  \n  async getProducts() {\n    return this.connector.get('/products.json')\n  }\n  \n  async getOrders() {\n    return this.connector.get('/orders.json')\n  }\n}`\n    };\n    return integrationMap[integrationName] || `// ${integrationName} integration placeholder`;\n}\n// Generate environment configuration\nasync function generateEnvironmentConfig(config, outputDir) {\n    const envExample = `# Database\nDATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/app_db\"\n\n# Authentication\nNEXT_PUBLIC_SUPABASE_URL=\"your-supabase-url\"\nNEXT_PUBLIC_SUPABASE_ANON_KEY=\"your-supabase-anon-key\"\nJWT_SECRET=\"your-jwt-secret-key\"\n\n# App Configuration\nNEXT_PUBLIC_APP_NAME=\"${config.business.name}\"\nNEXT_PUBLIC_APP_URL=\"http://localhost:3000\"`;\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \".env.example\"), envExample);\n    console.log(\"\\uD83C\\uDF0D Environment configuration generated\");\n}\n// Generate deployment configuration\nasync function generateDeploymentConfig(config, outputDir) {\n    const vercelConfig = {\n        \"name\": config.business.name.toLowerCase().replace(/\\s+/g, \"-\"),\n        \"framework\": \"nextjs\",\n        \"buildCommand\": \"npm run build\",\n        \"outputDirectory\": \".next\",\n        \"installCommand\": \"npm install\",\n        \"devCommand\": \"npm run dev\"\n    };\n    await fs_promises__WEBPACK_IMPORTED_MODULE_3__.writeFile(path__WEBPACK_IMPORTED_MODULE_4__.join(outputDir, \"vercel.json\"), JSON.stringify(vercelConfig, null, 2));\n    console.log(\"\\uD83D\\uDE80 Deployment configuration generated\");\n}\nasync function POST(request) {\n    try {\n        const { yamlConfig, appName } = await request.json();\n        if (!yamlConfig || !appName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing yamlConfig or appName\"\n            }, {\n                status: 400\n            });\n        }\n        // Parse and validate YAML configuration\n        let config;\n        try {\n            console.log(\"\\uD83D\\uDD0D Parsing YAML config:\", yamlConfig.substring(0, 500));\n            // Try to parse the YAML config as YAML first\n            let parsedConfig;\n            try {\n                // Import yaml parser\n                const yaml = __webpack_require__(/*! js-yaml */ \"(rsc)/../../node_modules/.pnpm/js-yaml@4.1.0/node_modules/js-yaml/index.js\");\n                parsedConfig = yaml.load(yamlConfig);\n                console.log(\"✅ Successfully parsed YAML\");\n            } catch (yamlError) {\n                console.log(\"❌ YAML parse failed, trying JSON fallback\");\n                // If YAML parsing fails, the yamlConfig might already be JSON\n                parsedConfig = JSON.parse(yamlConfig);\n            }\n            console.log(\"\\uD83D\\uDCCA Parsed config structure:\", JSON.stringify(parsedConfig, null, 2).substring(0, 1000));\n            // Validate the parsed configuration using Zod\n            const validationResult = validateYamlConfigSafe(parsedConfig);\n            if (!validationResult.success) {\n                console.error(\"❌ YAML validation failed:\", validationResult.errors);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Invalid YAML configuration\",\n                    details: validationResult.errors\n                }, {\n                    status: 400\n                });\n            }\n            config = validationResult.data;\n            console.log(\"✅ YAML validation successful\");\n            console.log(\"\\uD83C\\uDFAF Final config for app generation:\", JSON.stringify(config, null, 2).substring(0, 1000));\n        } catch (parseError) {\n            console.error(\"Config parsing error:\", parseError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid YAML configuration\"\n            }, {\n                status: 400\n            });\n        }\n        // Create output directory\n        const timestamp = Date.now();\n        const sanitizedAppName = appName.toLowerCase().replace(/\\s+/g, \"-\");\n        const outputDir = path__WEBPACK_IMPORTED_MODULE_4__.join(process.cwd(), \"generated-apps\", sanitizedAppName + \"-\" + timestamp);\n        await fs_promises__WEBPACK_IMPORTED_MODULE_3__.mkdir(outputDir, {\n            recursive: true\n        });\n        // Generate the complete custom Next.js application\n        await generateCustomNextJSApp(config, appName, outputDir);\n        // Auto-start the generated application\n        const port = 3000 + Math.floor(Math.random() * 1000);\n        console.log(\"\\uD83D\\uDE80 Auto-starting \" + appName + \" on port \" + port + \"...\");\n        try {\n            // Install dependencies\n            console.log(\"\\uD83D\\uDCE6 Installing dependencies...\");\n            await execAsync(\"npm install\", {\n                cwd: outputDir\n            });\n            // Set up database\n            console.log(\"\\uD83D\\uDCBE Setting up database...\");\n            await execAsync(\"npm run db:generate\", {\n                cwd: outputDir\n            });\n            await execAsync(\"npm run db:push\", {\n                cwd: outputDir\n            });\n            // Start the application\n            console.log(\"\\uD83D\\uDE80 Starting application on port \" + port + \"...\");\n            execAsync(\"npm run dev -- -p \" + port, {\n                cwd: outputDir\n            }).then(()=>console.log(\"✅ Application started successfully on port \" + port)).catch((error)=>console.error(\"❌ Failed to start application:\", error));\n        } catch (error) {\n            console.error(\"Auto-setup error:\", error);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            appName,\n            outputDir,\n            port,\n            message: \"Application generated successfully! Access it at http://localhost:\" + port\n        });\n    } catch (error) {\n        console.error(\"Generation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate application\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        message: \"App generation API is running\",\n        endpoints: {\n            POST: \"/api/generate - Generate a new application from YAML config\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.2.30_react-dom@18.3.1_react@18.3.1","vendor-chunks/js-yaml@4.1.0"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@14.2.30_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate%2Froute&page=%2Fapi%2Fgenerate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate%2Froute.ts&appDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsegevbin%2FDesktop%2FOpsai%2Fapps%2Fopsai-onboarding&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();