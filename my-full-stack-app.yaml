vertical:
  name: modern-saas-platform
  description: Full-featured SaaS platform with complete integration
  version: 1.0.0
  industry: technology
  businessModel: b2b-saas

business:
  name: TechCorp Solutions
  type: Software as a Service
  website: https://techcorp.example.com
  contact:
    email: support@techcorp.com
    phone: +1-800-555-0100
  settings:
    timezone: America/New_York
    currency: USD
    language: en

app:
  name: techcorp-platform
  displayName: TechCorp Platform
  description: A comprehensive B2B SaaS platform with full API integrations, authentication, and modern UI
  version: 1.0.0
  author: TechCorp Solutions
  license: MIT

database:
  type: postgresql
  entities:
    - name: User
      displayName: Users
      description: Platform users with authentication
      fields:
        - name: id
          type: string
          primary: true
          unique: true
        - name: email
          type: string
          required: true
          unique: true
          validation:
            pattern: ^[^\s@]+@[^\s@]+\.[^\s@]+$
          ui:
            widget: email
            label: Email Address
            placeholder: user@example.com
        - name: name
          type: string
          required: true
          ui:
            widget: input
            label: Full Name
        - name: role
          type: enum
          values: [admin, manager, user]
          default: user
          ui:
            widget: select
            label: User Role
        - name: organizationId
          type: string
          required: true
          ui:
            widget: relation_select
            model: Organization
        - name: isActive
          type: boolean
          default: true
          ui:
            widget: toggle
            label: Active Status
        - name: lastLogin
          type: datetime
          ui:
            widget: datetime
            label: Last Login
        - name: createdAt
          type: datetime
          default: now
        - name: updatedAt
          type: datetime
          default: now
      relationships:
        - type: belongsTo
          model: Organization
          foreign_key: organizationId
        - type: hasMany
          model: Project
          foreign_key: createdBy
      indexes:
        - email_idx
        - organization_idx
      permissions:
        create: [admin]
        read: [admin, manager, user]
        update: [admin, manager]
        delete: [admin]

    - name: Organization
      displayName: Organizations
      description: Customer organizations
      fields:
        - name: id
          type: string
          primary: true
          unique: true
        - name: name
          type: string
          required: true
          ui:
            widget: input
            label: Organization Name
        - name: domain
          type: string
          unique: true
          ui:
            widget: input
            label: Domain
            placeholder: company.com
        - name: plan
          type: enum
          values: [starter, professional, enterprise]
          default: starter
          ui:
            widget: select
            label: Subscription Plan
        - name: billingEmail
          type: string
          required: true
          ui:
            widget: email
            label: Billing Email
        - name: settings
          type: json
          ui:
            widget: json-editor
            label: Organization Settings
        - name: createdAt
          type: datetime
          default: now
        - name: updatedAt
          type: datetime
          default: now
      relationships:
        - type: hasMany
          model: User
          foreign_key: organizationId
        - type: hasMany
          model: Project
          foreign_key: organizationId
      permissions:
        create: [admin]
        read: [admin, manager, user]
        update: [admin, manager]
        delete: [admin]

    - name: Project
      displayName: Projects
      description: Organization projects
      fields:
        - name: id
          type: string
          primary: true
          unique: true
        - name: name
          type: string
          required: true
          ui:
            widget: input
            label: Project Name
        - name: description
          type: text
          ui:
            widget: textarea
            label: Description
        - name: organizationId
          type: string
          required: true
        - name: status
          type: enum
          values: [planning, active, completed, archived]
          default: planning
          ui:
            widget: select
            label: Status
        - name: budget
          type: decimal
          ui:
            widget: currency
            label: Budget
        - name: startDate
          type: date
          ui:
            widget: date
            label: Start Date
        - name: endDate
          type: date
          ui:
            widget: date
            label: End Date
        - name: createdBy
          type: string
          required: true
        - name: tags
          type: json
          ui:
            widget: tags
            label: Tags
        - name: createdAt
          type: datetime
          default: now
        - name: updatedAt
          type: datetime
          default: now
      relationships:
        - type: belongsTo
          model: Organization
          foreign_key: organizationId
        - type: belongsTo
          model: User
          foreign_key: createdBy
        - type: hasMany
          model: Task
          foreign_key: projectId
      permissions:
        create: [admin, manager]
        read: [admin, manager, user]
        update: [admin, manager]
        delete: [admin]

    - name: Task
      displayName: Tasks
      description: Project tasks
      fields:
        - name: id
          type: string
          primary: true
          unique: true
        - name: title
          type: string
          required: true
          ui:
            widget: input
            label: Task Title
        - name: description
          type: text
          ui:
            widget: textarea
            label: Description
        - name: projectId
          type: string
          required: true
        - name: assignedTo
          type: string
          ui:
            widget: relation_select
            model: User
        - name: priority
          type: enum
          values: [low, medium, high, critical]
          default: medium
          ui:
            widget: select
            label: Priority
        - name: status
          type: enum
          values: [todo, in_progress, review, completed]
          default: todo
          ui:
            widget: select
            label: Status
        - name: dueDate
          type: datetime
          ui:
            widget: datetime
            label: Due Date
        - name: completedAt
          type: datetime
          ui:
            widget: datetime
            label: Completed At
        - name: createdAt
          type: datetime
          default: now
        - name: updatedAt
          type: datetime
          default: now
      relationships:
        - type: belongsTo
          model: Project
          foreign_key: projectId
        - type: belongsTo
          model: User
          foreign_key: assignedTo
      permissions:
        create: [admin, manager, user]
        read: [admin, manager, user]
        update: [admin, manager, user]
        delete: [admin, manager]

apis:
  integrations:
    - name: stripe_payments
      type: rest
      provider: Stripe
      baseUrl: https://api.stripe.com/v1
      authentication:
        type: bearer
        envVars:
          - STRIPE_SECRET_KEY
      endpoints:
        - name: create_customer
          method: POST
          path: /customers
          requestSchema:
            type: object
            properties:
              email: { type: string }
              name: { type: string }
              metadata: { type: object }
        - name: create_subscription
          method: POST
          path: /subscriptions
          requestSchema:
            type: object
            properties:
              customer: { type: string }
              items: { type: array }
        - name: create_invoice
          method: POST
          path: /invoices
        - name: list_invoices
          method: GET
          path: /invoices
      rateLimits:
        requestsPerMinute: 100
        burstLimit: 20
      retryPolicy:
        maxRetries: 3
        backoffStrategy: exponential
        initialDelay: 1000

    - name: sendgrid_email
      type: rest
      provider: SendGrid
      baseUrl: https://api.sendgrid.com/v3
      authentication:
        type: api_key
        header: Authorization
        envVars:
          - SENDGRID_API_KEY
      endpoints:
        - name: send_email
          method: POST
          path: /mail/send
          requestSchema:
            type: object
            properties:
              personalizations: { type: array }
              from: { type: object }
              subject: { type: string }
              content: { type: array }
        - name: get_stats
          method: GET
          path: /stats
      rateLimits:
        requestsPerMinute: 600

    - name: slack_notifications
      type: webhook
      provider: Slack
      webhookUrl: https://hooks.slack.com/services/YOUR/WEBHOOK/URL
      authentication:
        type: signature
        secret: SLACK_SIGNING_SECRET
      events:
        - user.created
        - project.completed
        - payment.received
        - alert.triggered

    - name: analytics_db
      type: database
      provider: PostgreSQL
      host: analytics.db.example.com
      port: 5432
      database: analytics
      authentication:
        type: basic
        envVars:
          - ANALYTICS_DB_USER
          - ANALYTICS_DB_PASSWORD
      ssl: true

workflows:
  - name: user_onboarding
    description: Complete user onboarding process
    trigger:
      type: event
      config:
        event: user.created
    steps:
      - name: create_stripe_customer
        type: api_call
        config:
          integration: stripe_payments
          endpoint: create_customer
          data:
            email: "{{user.email}}"
            name: "{{user.name}}"
            metadata:
              userId: "{{user.id}}"
              organizationId: "{{user.organizationId}}"
        retry:
          attempts: 3
          delay: 5000

      - name: send_welcome_email
        type: api_call
        config:
          integration: sendgrid_email
          endpoint: send_email
          data:
            personalizations:
              - to:
                  - email: "{{user.email}}"
                    name: "{{user.name}}"
            from:
              email: "noreply@techcorp.com"
              name: "TechCorp Platform"
            subject: "Welcome to TechCorp Platform!"
            content:
              - type: "text/html"
                value: "<p>Welcome {{user.name}}! Get started with our platform.</p>"

      - name: notify_slack
        type: webhook
        config:
          integration: slack_notifications
          data:
            text: "New user registered: {{user.name}} ({{user.email}})"
            channel: "#new-users"

      - name: create_default_project
        type: database_insert
        config:
          model: Project
          data:
            name: "Getting Started"
            description: "Your first project to explore the platform"
            organizationId: "{{user.organizationId}}"
            createdBy: "{{user.id}}"
            status: "active"

  - name: project_completion
    description: Handle project completion
    trigger:
      type: api_call
      endpoint: /api/projects/{id}/complete
      method: POST
    steps:
      - name: update_project_status
        type: database_update
        config:
          model: Project
          where: "id = {{projectId}}"
          data:
            status: "completed"
            completedAt: "{{now()}}"

      - name: calculate_metrics
        type: custom
        config:
          function: calculateProjectMetrics
          params:
            projectId: "{{projectId}}"

      - name: send_completion_report
        type: api_call
        config:
          integration: sendgrid_email
          endpoint: send_email
          template: project_completion_report

      - name: archive_data
        type: api_call
        config:
          integration: analytics_db
          endpoint: archive_project
          data:
            projectId: "{{projectId}}"
            metrics: "{{metrics}}"

  - name: daily_analytics_sync
    description: Sync analytics data daily
    trigger:
      type: schedule
      cron: "0 2 * * *"
    steps:
      - name: export_data
        type: database_query
        config:
          query: |
            SELECT * FROM projects 
            WHERE updatedAt >= NOW() - INTERVAL '1 day'

      - name: transform_data
        type: transformation
        config:
          rules:
            - type: aggregate
              groupBy: ["organizationId", "status"]
              metrics:
                - count: "id"
                - sum: "budget"

      - name: sync_to_analytics
        type: api_call
        config:
          integration: analytics_db
          endpoint: bulk_insert
          data: "{{transformedData}}"

authentication:
  providers:
    - email
    - oauth
  oauth:
    providers:
      - google
      - github
      - microsoft
  roles:
    - name: admin
      description: Full system administrator
      permissions:
        - "*"
    - name: manager
      description: Organization manager
      permissions:
        - organizations.read
        - organizations.update
        - users.*
        - projects.*
        - tasks.*
        - reports.read
    - name: user
      description: Standard user
      permissions:
        - profile.read
        - profile.update
        - projects.read
        - tasks.create
        - tasks.read
        - tasks.update
  security:
    passwordPolicy:
      minLength: 10
      requireUppercase: true
      requireLowercase: true
      requireNumbers: true
      requireSpecialChars: true
    sessionManagement:
      sessionTimeout: 24h
      refreshToken: true
    mfa:
      enabled: true
      methods:
        - totp
        - email
    auditLogging: true

ui:
  theme:
    primaryColor: '#3B82F6'
    secondaryColor: '#10B981'
    accentColor: '#F59E0B'
    font: 'Inter'
    mode: system
  pages:
    - name: dashboard
      path: /
      title: Dashboard
      layout: sidebar
      components:
        - type: stats_grid
          data_source: dashboard_stats
          cards:
            - title: Total Projects
              metric: total_projects
              icon: folder
              trend: true
            - title: Active Tasks
              metric: active_tasks
              icon: check-circle
              trend: true
            - title: Team Members
              metric: team_members
              icon: users
            - title: Monthly Budget
              metric: monthly_budget
              icon: dollar-sign
              format: currency
        - type: chart_widget
          title: Project Progress
          chartType: bar
          data_source: project_progress
          dimensions:
            x: month
            y: completed_projects
        - type: activity_feed
          title: Recent Activity
          data_source: recent_activities
          limit: 10

    - name: projects
      path: /projects
      title: Projects
      components:
        - type: page_header
          title: Projects
          actions:
            - label: New Project
              action: modal
              modal: create_project
              icon: plus
        - type: data_table
          data_source: projects
          columns:
            - field: name
              label: Project Name
              sortable: true
              searchable: true
            - field: organization.name
              label: Organization
            - field: status
              label: Status
              type: badge
              colors:
                planning: blue
                active: green
                completed: gray
                archived: red
            - field: budget
              label: Budget
              type: currency
              sortable: true
            - field: progress
              label: Progress
              type: progress
            - field: endDate
              label: Due Date
              type: date
              sortable: true
          actions:
            - label: View
              action: navigate
              target: /projects/{id}
            - label: Edit
              action: modal
              modal: edit_project
            - label: Archive
              action: api_call
              endpoint: /api/projects/{id}/archive
              confirm: true
          filters:
            - field: status
              type: select
              options:
                - planning
                - active
                - completed
                - archived
            - field: organizationId
              type: relation
              model: Organization
            - field: dateRange
              type: date_range

    - name: users
      path: /users
      title: User Management
      permissions: [admin, manager]
      components:
        - type: page_header
          title: Users
          actions:
            - label: Invite User
              action: modal
              modal: invite_user
              icon: user-plus
        - type: user_grid
          data_source: users
          layout: cards
          fields:
            - name
            - email
            - role
            - lastLogin
            - isActive

    - name: settings
      path: /settings
      title: Settings
      layout: tabs
      tabs:
        - name: organization
          title: Organization
          components:
            - type: form
              data_source: current_organization
              fields:
                - name: name
                  type: text
                  label: Organization Name
                - name: domain
                  type: text
                  label: Domain
                - name: billingEmail
                  type: email
                  label: Billing Email
                - name: plan
                  type: select
                  label: Subscription Plan
                  options:
                    - starter
                    - professional
                    - enterprise
        - name: integrations
          title: Integrations
          components:
            - type: integration_list
              integrations:
                - stripe_payments
                - sendgrid_email
                - slack_notifications
        - name: security
          title: Security
          components:
            - type: security_settings
              features:
                - mfa
                - session_management
                - audit_logs

alerts:
  rules:
    - name: high_budget_project
      description: Alert when project budget exceeds threshold
      conditions:
        - field: project.budget
          operator: greater_than
          value: 100000
      actions:
        - type: email
          to: ["finance@techcorp.com"]
          template: high_budget_alert
        - type: slack
          channel: "#finance"

    - name: task_overdue
      description: Alert when task is overdue
      conditions:
        - field: task.dueDate
          operator: less_than
          value: "now()"
        - field: task.status
          operator: not_equals
          value: "completed"
      actions:
        - type: email
          to: ["{{task.assignedTo.email}}"]
          template: task_overdue
        - type: notification
          channel: in_app
          priority: high

    - name: subscription_expiring
      description: Alert when subscription is expiring soon
      conditions:
        - field: organization.subscriptionEndDate
          operator: less_than
          value: "now() + 30 days"
      actions:
        - type: email
          to: ["{{organization.billingEmail}}"]
          template: subscription_renewal
        - type: workflow
          workflow: send_renewal_reminders

deployment:
  platform: aws
  environment: production
  resources:
    api:
      type: ecs
      cpu: 2
      memory: 4Gi
      replicas: 3
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 10
        targetCPU: 70
    database:
      type: rds
      instance: db.r5.large
      storage: 100Gi
      multiAZ: true
      backups:
        enabled: true
        retention: 30
    cache:
      type: elasticache
      engine: redis
      instance: cache.m5.large
    storage:
      type: s3
      versioning: true
      lifecycle:
        - rule: archive_old_files
          days: 90
          storageClass: GLACIER
  monitoring:
    provider: datadog
    features:
      - apm
      - logs
      - metrics
      - synthetics
  security:
    waf: true
    ddos: true
    secrets:
      provider: aws_secrets_manager

features:
  authentication: true
  multiTenancy: true
  workflows: true
  integrations: true
  fileUpload: true
  notifications: true
  analytics: true
  audit: true
  search: true
  realtime: true
  ai: true
  caching: true
  queues: true